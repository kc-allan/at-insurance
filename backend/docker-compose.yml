version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: atinsurance
      POSTGRES_USER: atinsurance
      POSTGRES_PASSWORD: atinsurance123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atinsurance"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./media:/app/media
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key
      - DATABASE_URL=postgresql://atinsurance:atinsurance123@db:5432/atinsurance
      - REDIS_URL=redis://redis:6379/0
      - AFRICASTALKING_USERNAME=sandbox
      - AFRICASTALKING_API_KEY=your-api-key
      - USE_MOCK_SMS=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 4 backend.wsgi:application"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./media:/app/media:ro
      - ./staticfiles:/app/staticfiles:ro
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data: