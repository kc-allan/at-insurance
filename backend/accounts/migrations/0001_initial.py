# Generated by Django 5.2.3 on 2025-07-31 11:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(help_text='Primary phone number for OTP login', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254712345678' or '0712345678'", regex='^\\+?254?\\d{9,10}$')])),
                ('national_id', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_county', models.CharField(blank=True, max_length=50, null=True)),
                ('ward', models.CharField(blank=True, max_length=50, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('gps_coordinates', models.CharField(blank=True, help_text='Latitude,Longitude', max_length=50, null=True)),
                ('nearest_town', models.CharField(blank=True, max_length=100, null=True)),
                ('farm_size_acres', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('land_ownership_type', models.CharField(blank=True, choices=[('owned', 'Owned'), ('leased', 'Leased'), ('family', 'Family Land'), ('communal', 'Communal')], max_length=20, null=True)),
                ('farming_type', models.CharField(blank=True, choices=[('subsistence', 'Subsistence'), ('commercial', 'Commercial'), ('mixed', 'Mixed')], max_length=20, null=True)),
                ('primary_crops', models.JSONField(blank=True, default=list, help_text='List of primary crops')),
                ('livestock_count', models.JSONField(blank=True, default=dict, help_text='Dictionary of livestock types and counts')),
                ('years_farming_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('irrigation_type', models.CharField(blank=True, choices=[('rain_fed', 'Rain Fed'), ('irrigation', 'Irrigation'), ('greenhouse', 'Greenhouse'), ('mixed', 'Mixed')], max_length=20, null=True)),
                ('preferred_payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('bank', 'Bank Transfer'), ('cash', 'Cash')], default='mpesa', max_length=20)),
                ('mpesa_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254712345678' or '0712345678'", regex='^\\+?254?\\d{9,10}$')])),
                ('bank_account', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('average_annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('previous_losses', models.JSONField(blank=True, default=dict, help_text='Historical loss data')),
                ('has_insurance_history', models.BooleanField(default=False)),
                ('education_level', models.CharField(blank=True, choices=[('none', 'None'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('tertiary', 'Tertiary'), ('university', 'University')], max_length=20, null=True)),
                ('farmer_group_membership', models.CharField(blank=True, help_text='Cooperative/SACCO membership', max_length=200, null=True)),
                ('has_received_farming_training', models.BooleanField(default=False)),
                ('alternative_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254712345678' or '0712345678'", regex='^\\+?254?\\d{9,10}$')])),
                ('next_of_kin_name', models.CharField(blank=True, max_length=200, null=True)),
                ('next_of_kin_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254712345678' or '0712345678'", regex='^\\+?254?\\d{9,10}$')])),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('sw', 'Kiswahili'), ('local', 'Local Language')], default='en', max_length=10)),
                ('is_verified', models.BooleanField(default=False, help_text='Phone number verified via OTP')),
                ('registration_channel', models.CharField(choices=[('app', 'Mobile App'), ('web', 'Web'), ('ussd', 'USSD'), ('agent', 'Agent')], default='app', max_length=10)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='farmers/photos/')),
                ('agent_code', models.CharField(blank=True, help_text='If registered through an agent', max_length=20, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Farmer',
                'verbose_name_plural': 'Farmers',
                'db_table': 'farmers',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FarmPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='farms/photos/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('photo_type', models.CharField(choices=[('land', 'Land/Field'), ('crops', 'Crops'), ('livestock', 'Livestock'), ('equipment', 'Equipment'), ('storage', 'Storage Facility'), ('other', 'Other')], default='land', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farm_photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'farm_photos',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(db_index=True, max_length=15)),
                ('otp_code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('attempts', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'otps',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['phone_number', 'is_used'], name='otps_phone_n_7d1298_idx'), models.Index(fields=['expires_at'], name='otps_expires_f6308f_idx')],
            },
        ),
    ]
